window.addEventListener( "load", function () { let e = document.querySelector( ".loader" ); e.classList.add( "loader-hidden" ), AOS.init(), new Swiper( ".home__swiper", { slidesPerView: 1, slidesPerGroup: 1, autoplay: { delay: 6e3, disableOnInteraction: !1 }, loop: !0, spaceBetween: 25, effect: "fade", navigation: { nextEl: ".swiper-button-next", prevEl: ".swiper-button-prev" }, pagination: { el: ".swiper-pagination", clickable: !0 } } ); var t = document.documentElement.lang; new Swiper( ".products__swiper", { slidesPerView: 1, spaceBetween: 30, centeredSlides: !0, speed: 500, loop: !0, navigation: { nextEl: "en" === t ? ".swiper-button-prev" : ".swiper-button-next", prevEl: "en" === t ? ".swiper-button-next" : ".swiper-button-prev" }, autoplay: { autoplay: !0, delay: 1300 }, breakpoints: { 320: { slidesPerView: 1 }, 768: { slidesPerView: 2 }, 1024: { slidesPerView: 3 } } } ); let o = document.querySelector( "form" ); if ( o ) { function s ( e, t ) { e.addEventListener( "input", function ( e ) { let o = RegExp( t ); e.target.value = e.target.value.split( "" ).filter( e => o.test( e ) ).join( "" ); } ); } s( o.name, "^[؀-ۿa-zA-Z\\s]+$" ), s( o.email, "[a-zA-Z0-9.@_-]" ), s( o.phone, "^[0-9()\\-+\\s]+$" ), s( o.subject, "^[؀-ۿa-zA-Z\\s]+$" ), s( o.message, "^[؀-ۿa-zA-Z0-9\\-\\/\\s]+$" ), o.addEventListener( "submit", function ( e ) { e.preventDefault(); let t = document.documentElement.lang.startsWith( "ar" ), o = document.querySelector( ".form__alert" ), s = document.querySelector( ".form__alert button" ), l = document.querySelector( ".form__alert span" ), n = document.querySelector( ".form__alert img" ); emailjs..then( function () { o.classList.add( "alert__effect" ), s.onclick = function () { o.classList.remove( "alert__effect" ); }, e.target.reset(); }, function ( e ) { l.textContent = t ? "فشل في إرسال رسالتك. يرجى المحاولة مرة أخرى لاحقًا." : "Failed to send your message. Please try again later.", l.style.color = "#EA3323", n.src = "../assets/imges/contact/error.svg", o.classList.add( "alert__effect" ), s.onclick = function () { o.classList.remove( "alert__effect" ); }; } ); } ); } let l = document.querySelector( ".form__alert" ), n = document.querySelector( ".form__alert button" ); n.onclick = function () { l.classList.remove( "alert__effect" ); }; } ); const scroll__btn = document.querySelector( ".scroll__btn" ); scroll__btn && ( window.addEventListener( "scroll", function () { window.scrollY > 570 ? scroll__btn.classList.add( "scroll__btn--active" ) : scroll__btn.classList.remove( "scroll__btn--active" ); } ), scroll__btn.onclick = function () { setTimeout( function () { window.scrollTo( { top: 0, behavior: "smooth" } ); }, 300 ); } ), window.onscroll = function () { var e = document.querySelector( "header .container" ); window.innerWidth > 1200 && ( window.pageYOffset > 70 ? e.style.height = "65px" : e.style.height = "80px" ); }; let nav_bar = document.querySelector( ".header__nav" ), toggle = document.querySelector( ".header__toggle" ), toggle_open = document.querySelector( ".header__toggle-open" ), toggle_close = document.querySelector( ".header__toggle-close" ); toggle_open.addEventListener( "click", function () { nav_bar.classList.add( "show" ), toggle_open.style.display = "none", toggle_close.style.display = "block"; } ), toggle_close.addEventListener( "click", function () { nav_bar.classList.remove( "show" ), toggle_open.style.display = "block", toggle_close.style.display = "none"; } ); const navLinks = document.querySelectorAll( ".header__nav-link" ), sections = document.querySelectorAll( "section" ); if ( navLinks.length > 0 && sections.length > 0 ) { function e () { let e = window.location.hash; navLinks.forEach( t => { t.classList.remove( "header__nav-link--active" ); let o = t.getAttribute( "href" ); e === o && t.classList.add( "header__nav-link--active" ); } ); } function t () { let e = ""; sections.forEach( t => { let o = t.offsetTop, s = t.offsetHeight; window.scrollY >= o - 200 && window.scrollY < o + s - 200 && ( e = `#${ t.getAttribute( "id" ) }` ); } ), navLinks.forEach( t => { t.classList.remove( "header__nav-link--active" ), t.getAttribute( "href" ) === e && t.classList.add( "header__nav-link--active" ); } ); } document.addEventListener( "DOMContentLoaded", () => { e(), t(); } ), window.addEventListener( "hashchange", e ), window.addEventListener( "popstate", e ), window.addEventListener( "scroll", t ); } const video_sec = document.querySelector( ".about__video" ), video = document.querySelector( ".about__video video" ), playButton = document.querySelector( ".video__btn" ), overlay = document.querySelector( ".video__overlay" ); playButton.addEventListener( "click", function () { video.paused ? ( video.play(), video.setAttribute( "controls", " " ), overlay.style.opacity = "0", overlay.style.zIndex = "-1", playButton.style.opacity = "0", video_sec.classList.add( "play" ) ) : ( video.pause(), overlay.style.opacity = ".7", overlay.style.zIndex = "1", playButton.style.opacity = "1", video.removeAttribute( "controls" ), video_sec.classList.remove( "play" ) ); } ), video.addEventListener( "play", function () { video.setAttribute( "controls", " " ), video_sec.classList.add( "play" ); } ), video.addEventListener( "pause", function () { video_sec.classList.remove( "play" ); } ), video.addEventListener( "ended", function () { overlay.style.zIndex = "1", overlay.style.opacity = ".7", playButton.style.opacity = "1", video.removeAttribute( "controls" ), video_sec.classList.remove( "play" ); } ), window.addEventListener( "mouseup", function ( e ) { e.target === toggle || e.target.parentNode === toggle || e.target === video_sec || video_sec.contains( e.target ) || ( nav_bar.classList.remove( "show" ), toggle_close.style.display = "none", toggle_open.style.display = "block", video_sec.classList.remove( "play" ), video.pause() ); } ); let counter = document.querySelector( ".about__counter-item" ), numbers = document.querySelectorAll( ".about__counter-number" ); if ( counter && numbers.length > 0 ) { function o ( e ) { let t = [ "٠", "١", "٢", "٣", "٤", "٥", "٦", "٧", "٨", "٩" ]; return e.toString().replace( /\d/g, e => t[ e ] ); } function s ( e ) { let t = parseInt( e.dataset.target ), s = t / 100, l = 0, n = setInterval( () => { l += s; let r = document.documentElement.lang || "en"; e.textContent = ( "ar" === r ? o( Math.round( l ) ) : Math.round( l ) ) + "+", l >= t && ( e.textContent = ( "ar" === r ? o( t ) : t ) + "+", clearInterval( n ) ); }, 20 ); } let l = new IntersectionObserver( e => { e.forEach( e => { e.isIntersecting && ( setTimeout( () => { numbers.forEach( s ); }, 1e3 ), l.unobserve( e.target ) ); } ); }, { threshold: .1 } ); l.observe( counter ); } const sliders = document.querySelectorAll( ".clients__slide" ), sliderImages = document.querySelectorAll( ".clients__slide img" ); sliderImages.forEach( e => { e.addEventListener( "mouseover", function () { sliders.forEach( e => e.classList.add( "paused" ) ); } ), e.addEventListener( "mouseout", function () { sliders.forEach( e => e.classList.remove( "paused" ) ); } ); } );
document.onkeydown = function(e) {
  if (e.key === "F12") {
      return false;
  }
};
document.addEventListener("contextmenu", function(e) {
  e.preventDefault();
});
